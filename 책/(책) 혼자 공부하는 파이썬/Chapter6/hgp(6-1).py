#--------------------------------------------------------------------------------------------------------

# # 프로그램 시작

# print(" # 프로그램이 시작되었습니다!")

# # 구문 오류 발생 코드

# print(" # 예외를 강제로 발생시켜 볼께요!")

#--------------------------------------------------------------------------------------------------------

# # 프로그램 시작

# print("# 프로그램이 시작되었습니다!")

# # 예외 발생 코드
# list_a[1]

#--------------------------------------------------------------------------------------------------------

# # 프로그램 시작

# print("# 프로그램이 시작되었습니다!")

# # 예외 발생코드 해결

# list_a = [1,2,3,4,5]
# print(list_a[1])

#--------------------------------------------------------------------------------------------------------

# # 숫자를 입력받습니다.

# number_input_a = int(input("정수 입력 > "))

# # 출력합니다.

# print("원의 반지름:", number_input_a)
# print("원의 둘레:", 2 * 3.14 * number_input_a)
# print("원의 넓이:", 3.14 * number_input_a * number_input_a)

# # 정수입력> '7' 이 아닌 '7 센티미터' 라고하면?

#--------------------------------------------------------------------------------------------------------

# # 숫자를 입력받습니다.

# user_input_a = input(" 정수입력 >")

# # 사용자 입력이 숫자로만 구성되어 있을 때

# if user_input_a.isdigit():
#     #숫자로 변환합니다.
#     number_input_a = int(user_input_a)
#     #출력합니다.
#     print("원의 반지름:", number_input_a)
#     print("원의 둘레:", 2 * 3.14 * number_input_a)
#     print("원의 넓이:", 3.14 * number_input_a * number_input_a)
# else:
#     print("정수를 입력하지 않았습니다.")

#--------------------------------------------------------------------------------------------------------

# try except 구문으로 예외를 처리합니다.

try:
    # 숫자로 변환합니다.
    number_input_a = int(input("정수 입력>"))
    # 출력합니다.
    print("원의 반지름:", number_input_a)
    print("원의 둘레:", 2 * 3.14 * number_input_a)
    print("원의 넓이:", 3.14 * number_input_a * number_input_a)

except:
    print("무언가 잘못되었습니다.")
    
#--------------------------------------------------------------------------------------------------------

# # 변수를 선언합니다.

# list_input_a = ["52","273","32","스파이","103"]

# # 반복을 적용합니다.

# list_number = []
# for item in list_input_a:
#     # 숫자로 변환해서 리스트에 추가합니다.
#     try:
#         float(item) #예외가 발생하면 알아서 다음으로 진행은 안 되겠지?
#         list_number.append(item) # 예외 없이 통과했으면 리스트에 넣어줘!
    
#     except:
#         pass

# # 출력합니다.

# print("{} 내부에 있는 숫자는".format(list_input_a))
# print("{} 입니다.".format(list_number))

#--------------------------------------------------------------------------------------------------------

# # try except else 구문으로 예외를 처리합니다.

# try:
#     #숫자로 변환합니다.
#     number_input_a = int(input("정수입력>"))

# except:
#     print("정수를 입력하지 않았습니다.")

# else:
#     #출력합니다.
#     print("원의 반지름:", number_input_a)
#     print("원의 둘레:", 2 * 3.14 * number_input_a)
#     print("원의 넓이:", 3.14 * number_input_a * number_input_a)

#--------------------------------------------------------------------------------------------------------

# # try except 구문으로 예외를 처리합니다.

# try:
#     # 숫자로 변환합니다.
#     number_input_a = int(input("정수 입력>"))
#     # 출력합니다.
#     print("원의 반지름:", number_input_a)
#     print("원의 둘레:", 2 * 3.14 * number_input_a)
#     print("원의 넓이:", 3.14 * number_input_a * number_input_a)

# except:
#     print("정수를 입력해달라고 했잖아요?!")

# else:
#     print("예외가 발생하지 않았습니다.")

# finally:
#     print("일단 프로그램이 어떻게든 끝났습니다.")

#--------------------------------------------------------------------------------------------------------

# # try except 구문으로 예외를 처리합니다.

# try:
#     # 숫자로 변환합니다.
#     number_input_a = int(input("정수입력>"))
#     # 출력합니다.
#     print("원의 반지름:", number_input_a)
#     print("원의 둘레:", 2 * 3.14 * number_input_a)
#     print("원의 넓이:", 3.14 * number_input_a * number_input_a)

# else:
#     print("프로그램이 정상적으로 종료되었습니다.")

# # syntaxError 이유: try + exept + ...
# #                   try + finally 조합이 아닌이상 try + else 는 구문오류가 발생

#--------------------------------------------------------------------------------------------------------

# # try except 구문을 사용합니다.

# try:
#     # 파일을 엽니다.
#     file = open("into.txt","w")
#     # 여러 가지 처리를 수행합니다.
#     # 파일을 닫습니다.
#     file.close()
# except Exception as e:
#     print(e)

# print("# 파일이 제대로 닫혔는지 확인하기")
# print("file.closed:", file.closed)

#--------------------------------------------------------------------------------------------------------

# # try except 구문을 사용합니다.

# try:
#     #파일을 엽니다.
#     file = open("into.txt", "w")
#     #여러 가지 처리를 수행합니다.
#     예외.발생해라()
#     #파일을 닫습니다.
#     file.close()
# except Exception as e:
#     print(e)

# print("# 파일이 제대로 닫혔는지 확인하기")
# print("file.closed:", file closed)

# name '예외' is not defined
  #파일이 제대로 닫혔는지 확인하기 / file.closed: false

#--------------------------------------------------------------------------------------------------------

# # try except 구문을 사용합니다.

# try:
#     #파일을 엽니다.
#     file = open("into.txt", "w")
#     #여러 가지 처리를 수행합니다.
#     예외.발생해라()
# except Exception as e:
#     print(e)
# finally:
#     # 파일을 닫습니다.
#     file.close()

# print("# 파일이 제대로 닫혔는지 확인하기")
# print("file.closed:", file.closed)


# # name '예외' is not defined
#   #파일이 제대로 닫혔는지 확인하기 / file.closed: True

#--------------------------------------------------------------------------------------------------------

# # try except 구문을 사용합니다.
# try:
#     #파일을 엽니다.
#     file = open("into.txt", "w")
#     #여러 가지 처리를 수행합니다.
#     예외.발생해라()
# except Exception as e:
#     print(e)

# # 파일을 닫습니다.
# file.close()
# print("# 파일이 제대로 닫혔는지 확인하기")
# print("file.closed:", file.closed)

# # # name '예외' is not defined
# #   #파일이 제대로 닫혔는지 확인하기 / file.closed: True

#--------------------------------------------------------------------------------------------------------

# # test() 함수를 선언합니다.

# def test():
#     print("test() 함수의 첫 줄입니다.")
#     try:
#         print("try 구문이 실행되었습니다.")
#         return
#         print("try 구문의 return 키워드 뒤입니다.")
#     except:
#         print("except 구문이 실행되었습니다.")
#     else:
#         print("else 구문이 실행되었습니다.")
#     finally:
#         print("finally 구문이 실행되었습니다.")
#     print("test() 함수의 마지막 줄입니다.")

# # test() 함수를 호출합니다.
# test()

#--------------------------------------------------------------------------------------------------------

# # 함수를 선언합니다.

# def write_text_file(filename, text):
#     # try except 구문을 사용합니다.
#     try:
#         # 파일을 엽니다.
#         file = open(filename, "w")
#         # 여러 가지 처리를 수행합니다.
#         return
#         # 파일에 텍스트를 입력합니다.
#         file.write(text)
#     except Exception as e:
#         print(e)
#     finally:
#         #파일을 닫습니다.
#         file.close()

# # 함수를 호출합니다.
# write_text_file("test.txt", "안녕하세요!")

#--------------------------------------------------------------------------------------------------------

# print("프로그램이 시작되었습니다.")

# while True:
#     try:
#         print("try 구문이 실행되었습니다.")
#         break
#         print("try 구문의 break 키워드 뒤입니다.")
#     except:
#         print("except 구문이 실행되었습니다.")
#     finally:
#         print("finally 구문이 실행되었습니다.")
#     print("while 반복문의 마지막 줄입니다.")
# print("프로그램이 종료되었습니다.")

#--------------------------------------------------------------------------------------------------------

